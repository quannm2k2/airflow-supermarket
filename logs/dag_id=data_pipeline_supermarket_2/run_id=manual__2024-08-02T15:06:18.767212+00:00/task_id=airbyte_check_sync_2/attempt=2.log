[2024-08-03T10:49:12.337+0700] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-08-03T10:49:12.349+0700] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: data_pipeline_supermarket_2.airbyte_check_sync_2 manual__2024-08-02T15:06:18.767212+00:00 [queued]>
[2024-08-03T10:49:12.356+0700] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: data_pipeline_supermarket_2.airbyte_check_sync_2 manual__2024-08-02T15:06:18.767212+00:00 [queued]>
[2024-08-03T10:49:12.356+0700] {taskinstance.py:2306} INFO - Starting attempt 2 of 2
[2024-08-03T10:49:12.383+0700] {taskinstance.py:2330} INFO - Executing <Task(AirbyteJobSensor): airbyte_check_sync_2> on 2024-08-02 15:06:18.767212+00:00
[2024-08-03T10:49:12.386+0700] {standard_task_runner.py:64} INFO - Started process 20203 to run task
[2024-08-03T10:49:12.388+0700] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'data_pipeline_supermarket_2', 'airbyte_check_sync_2', 'manual__2024-08-02T15:06:18.767212+00:00', '--job-id', '165', '--raw', '--subdir', 'DAGS_FOLDER/data_pipeline_supermarket_2.py', '--cfg-path', '/tmp/tmptkqyh4xg']
[2024-08-03T10:49:12.390+0700] {standard_task_runner.py:91} INFO - Job 165: Subtask airbyte_check_sync_2
[2024-08-03T10:49:12.439+0700] {task_command.py:426} INFO - Running <TaskInstance: data_pipeline_supermarket_2.airbyte_check_sync_2 manual__2024-08-02T15:06:18.767212+00:00 [running]> on host DESKTOP-RHVHV7A.
[2024-08-03T10:49:12.568+0700] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='data_pipeline_supermarket_2' AIRFLOW_CTX_TASK_ID='airbyte_check_sync_2' AIRFLOW_CTX_EXECUTION_DATE='2024-08-02T15:06:18.767212+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-08-02T15:06:18.767212+00:00'
[2024-08-03T10:49:12.571+0700] {taskinstance.py:430} INFO - ::endgroup::
[2024-08-03T10:49:12.587+0700] {baseoperator.py:400} WARNING - AirbyteJobSensor.execute cannot be called outside TaskInstance!
[2024-08-03T10:49:12.596+0700] {base.py:84} INFO - Using connection ID 'airflow-call-to-airbyte-example' for task execution.
[2024-08-03T10:49:12.702+0700] {http.py:200} ERROR - HTTP error: Internal Server Error
[2024-08-03T10:49:12.704+0700] {http.py:201} ERROR - {"message":"Internal Server Error: Could not find job with id: 88","exceptionClassName":"java.lang.RuntimeException","exceptionStack":["java.lang.RuntimeException: Could not find job with id: 88","\tat io.airbyte.persistence.job.DefaultJobPersistence.lambda$getJob$36(DefaultJobPersistence.java:959)","\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)","\tat io.airbyte.persistence.job.DefaultJobPersistence.getJob(DefaultJobPersistence.java:959)","\tat io.airbyte.persistence.job.DefaultJobPersistence.lambda$getJob$35(DefaultJobPersistence.java:955)","\tat io.airbyte.db.Database.query(Database.java:23)","\tat io.airbyte.db.ExceptionWrappingDatabase.query(ExceptionWrappingDatabase.java:31)","\tat io.airbyte.persistence.job.DefaultJobPersistence.getJob(DefaultJobPersistence.java:955)","\tat io.airbyte.commons.server.handlers.JobHistoryHandler.getJobInfo(JobHistoryHandler.java:312)","\tat io.airbyte.server.apis.JobsApiController.lambda$getJobInfo$6(JobsApiController.java:131)","\tat io.airbyte.server.apis.ApiHelper.execute(ApiHelper.java:28)","\tat io.airbyte.server.apis.JobsApiController.getJobInfo(JobsApiController.java:131)","\tat io.airbyte.server.apis.$JobsApiController$Definition$Exec.dispatch(Unknown Source)","\tat io.micronaut.context.AbstractExecutableMethodsDefinition$DispatchedExecutableMethod.invokeUnsafe(AbstractExecutableMethodsDefinition.java:461)","\tat io.micronaut.context.DefaultBeanContext$BeanContextUnsafeExecutionHandle.invokeUnsafe(DefaultBeanContext.java:4325)","\tat io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:271)","\tat io.micronaut.web.router.DefaultUriRouteMatch.execute(DefaultUriRouteMatch.java:39)","\tat io.micronaut.http.server.RouteExecutor.executeRouteAndConvertBody(RouteExecutor.java:490)","\tat io.micronaut.http.server.RouteExecutor.lambda$callRoute$6(RouteExecutor.java:467)","\tat io.micronaut.core.execution.ExecutionFlow.lambda$async$1(ExecutionFlow.java:87)","\tat io.micronaut.core.propagation.PropagatedContext.lambda$wrap$3(PropagatedContext.java:211)","\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)","\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)","\tat java.base/java.lang.Thread.run(Thread.java:1583)"],"rootCauseExceptionStack":[]}
[2024-08-03T10:49:12.704+0700] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-08-03T10:49:12.708+0700] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/http/hooks/http.py", line 198, in check_response
    response.raise_for_status()
  File "/usr/local/lib/python3.10/dist-packages/requests/models.py", line 1024, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http://localhost:8000/api/v1/jobs/get

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/airbyte/sensors/airbyte.py", line 119, in execute
    super().execute(context)
  File "/usr/local/lib/python3.10/dist-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/airflow/sensors/base.py", line 264, in execute
    raise e
  File "/usr/local/lib/python3.10/dist-packages/airflow/sensors/base.py", line 246, in execute
    poke_return = self.poke(context)
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/airbyte/sensors/airbyte.py", line 89, in poke
    job = hook.get_job(job_id=self.airbyte_job_id)
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/airbyte/hooks/airbyte.py", line 209, in get_job
    return self.run(
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/http/hooks/http.py", line 188, in run
    return self.run_and_check(session, prepped_request, extra_options)
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/http/hooks/http.py", line 239, in run_and_check
    self.check_response(response)
  File "/usr/local/lib/python3.10/dist-packages/airflow/providers/http/hooks/http.py", line 202, in check_response
    raise AirflowException(str(response.status_code) + ":" + response.reason)
airflow.exceptions.AirflowException: 500:Internal Server Error
[2024-08-03T10:49:12.719+0700] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=data_pipeline_supermarket_2, task_id=airbyte_check_sync_2, run_id=manual__2024-08-02T15:06:18.767212+00:00, execution_date=20240802T150618, start_date=20240803T034912, end_date=20240803T034912
[2024-08-03T10:49:12.745+0700] {standard_task_runner.py:110} ERROR - Failed to execute job 165 for task airbyte_check_sync_2 (500:Internal Server Error; 20203)
[2024-08-03T10:49:12.763+0700] {local_task_job_runner.py:243} INFO - Task exited with return code 1
[2024-08-03T10:49:12.777+0700] {logging_mixin.py:188} WARNING - /usr/local/lib/python3.10/dist-packages/airflow/models/baseoperator.py:1297 AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
[2024-08-03T10:49:12.786+0700] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-08-03T10:49:12.787+0700] {local_task_job_runner.py:222} INFO - ::endgroup::
